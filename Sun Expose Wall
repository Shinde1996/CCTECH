class Program
    {
     
        public static double SunExposedDistance(double[,] points, double[,] point)
        {
            int n = points.Length / 8;
            double distbtB = 0.0;
            double VerDist = 0.0;
            double HoriDist = 0.0;
            // calculate angle of inclination of sun
            double xsun = point[0, 0] - points[0, 0];
            double ysun = point[0, 1] - points[1, 1];
            double angle = Math.Atan(ysun / xsun);
            for (int i = 1; i < n; i++)
            {
                distbtB += (points[4 * i, 0] - points[4 * i - 1, 0]) * Math.Tan(angle);
               

            }
            for (int j = 1; j <= n; j++)
            {
                VerDist = points[4 * j - 2, 1] - points[4 * j - 1, 1];
                HoriDist += points[4 * j - 1, 0] - points[4 * j - 3, 0];
            }
           
            
            if (distbtB < 0)
            {
                distbtB = -distbtB;
            }
            if (VerDist < 0)
            {
                VerDist = -VerDist;
            }
          
            return HoriDist + VerDist + distbtB;
        }
        static void Main(string[] args)
        {
            double[,] points = new double[8, 2] { { 4, 0 }, { 4, -5 }, { 7, -5 }, { 7, 0 }, { 0.4, -2 }, { 0.4, -5 }, { 2.5, -5 }, { 2.5, -2 } };
            double[,] location = new double[1, 2] { { -3.5, 1 } };
            double distance = SunExposedDistance(points, location);
           
        }
    }
